@page "/RemoveTicketSales"
@using BroadwayShows.Library.Models
@using BroadwayShows.Library.Services
@inject TicketSalesService TicketSalesService
@inject NavigationManager NavigationManager

<h3>Remove Ticket Sales</h3>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">
            <div class="row mb-3">
            <div class="form-group">
                <label for="ticketNumber">Enter Ticket Number:</label>
                <InputNumber id="ticketNumber" class="form-control" @bind-Value="selectedTicketNumber" />
            </div>
            </div>
            <div class="d-grid gap-2">
                <button class="btn btn-info" @onclick="DisplayTicketDetails">Show Ticket Details</button>
                <button class="btn btn-danger" @onclick="DeleteTicket">Delete Ticket</button>
                <button class="btn btn-secondary" @onclick="NavigateToSpecificPage">Cancel</button>
            </div>

            @if (showDetailsAttempted)
            {
                if (ticketDetails != null)
                {
                    <h4 class="mt-4">Ticket Details:</h4>
                    <ul>
                        <li>Time: @ticketDetails.Time</li>
                        <li>Date: @ticketDetails.Date</li>
                        <li>Number of Tickets: @ticketDetails.NumberOfTickets</li>
                        <li>Price: @ticketDetails.Price</li>
                        <li>Theater ID: @ticketDetails.TheaterId</li>
                    </ul>
                }
                else
                {
                    <h4 class="mt-4" style="color: red;">No ticket with such Id in the Database!</h4>
                }
            }

        </div>
    </div>
</div>

@code {
    private int selectedTicketNumber;
    private TicketSales ticketDetails;
    private bool showDetailsAttempted = false;  
    private async Task DisplayTicketDetails()
    {
        ticketDetails = await TicketSalesService.GetTicketSaleByIdAsync(selectedTicketNumber);
        showDetailsAttempted = true;  
    }

    private async Task DeleteTicket()
    {
        await TicketSalesService.DeleteTicketSaleAsync(selectedTicketNumber);
        ticketDetails = null;
        showDetailsAttempted = false;
    }

    private void NavigateToSpecificPage()
    {
        NavigationManager.NavigateTo("/RemoveAttributes");
    }
}
