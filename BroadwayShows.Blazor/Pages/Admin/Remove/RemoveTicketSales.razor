@page "/UpdateTicketSales"
@* @page "/UpdateTicket"
@using BroadwayShows.Library.Models
@using BroadwayShows.Library.Services
@inject TicketSalesService TicketSalesService
@inject NavigationManager NavigationManager
@inject TheaterService TheaterService


<h3>Update Ticket Sales</h3>

<div class="container mt-5">
    <div class="row">
        <div class="col-md-12">

            <div class="form-group d-grid gap-2">
                <label for="ticketNumber">Enter Ticket Number to Update:</label>
                <InputNumber id="ticketNumber" class="form-control" @bind-Value="selectedTicketNumber" />
                <button class="btn btn-info mt-2" @onclick="LoadTicketDetails">Load Ticket Details</button>
            </div>

            @if (ticketSale != null)
            {
                <div class="form-group">
                    <label for="time">Time:</label>
                    <input type="time" id="time" class="form-control" @bind-value="@timeOnly" @bind-value:event="oninput" />
                </div>

                <div class="form-group">
                    <label for="date">Date:</label>
                    <input type="date" id="date" class="form-control" @bind="ticketSale.Date" />
                </div>

                <div class="form-group">
                    <label for="numberOfTickets">Number of Tickets:</label>
                    <InputNumber id="numberOfTickets" class="form-control" @bind-Value="ticketSale.NumberOfTickets" />
                </div>

                <div class="form-group">
                    <label for="price">Price:</label>
                    <InputNumber id="price" class="form-control" @bind-Value="ticketSale.Price" />
                </div>
                <div class="row mb-3">

                <div class="form-group">
                    <label for="theaterSelection">Select Theater:</label>
                    <select id="theaterSelection" class="form-control" @bind="ticketSale.TheaterId" @bind:event="oninput">
                        <option value="0">Select a theater...</option>
                        @if (theaters != null)
                        {
                            foreach (var theater in theaters)
                            {
                                <option value="@theater.TheaterId">@theater.Name</option>
                            }
                        }
                        else
                        {
                            <option>Loading theater names...</option>
                        }
                    </select>
                </div>
                </div>
                <div class="d-grid gap-2">
                    <button class="btn btn-primary" @onclick="UpdateTicket">Update Ticket</button>
                    <button class="btn btn-secondary mt-2" @onclick="NavigateToAttributes">Cancel</button>
                </div>
            }

        </div>
    </div>
</div>

@code {
    private int selectedTicketNumber;
    private TicketSales ticketSale = new TicketSales();
    private List
    <Theater> theaters;
    private TimeOnly timeOnly
    {
        get => TimeOnly.FromTimeSpan(ticketSale.Time);
        set => ticketSale.Time = value.ToTimeSpan();
    }

    protected override async Task OnInitializedAsync()
    {
        theaters = await TheaterService.GetAllTheatersAsync();
    }

    private async Task LoadTicketDetails()
    {
        ticketSale = await TicketSalesService.GetTicketSaleByIdAsync(selectedTicketNumber);
    }

    private void NavigateToPage(string url)
    {
        NavigationManager.NavigateTo(url);
    }

    private void NavigateToAttributes()
    {
        NavigateToPage("../UpdateAttributes");
    }
    private async Task UpdateTicket()
    {
        if (ticketSale != null)
        {
            await TicketSalesService.UpdateTicketSaleAsync(ticketSale);
            ticketSale = null; 
        }
    }
} *@
